<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wpa</groupId>
    <artifactId>wpa</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <openfx.version>22.0.1</openfx.version>
        <junit.version>5.10.0</junit.version>
        <mvvmfx.version>1.8.0</mvvmfx.version>
        <ikonli.version>12.3.1</ikonli.version>
        <atlantafx.version>2.0.1</atlantafx.version>

        <app.module>com.wpa</app.module>
        <app.launcher>com.wpa.NewLauncher</app.launcher>
        <build.artifactName>wpa-1-win-${os.arch}</build.artifactName>
        <!-- application dependencies that will be included as JAR files -->
        <build.dependenciesDir>${project.build.directory}${file.separator}dependencies</build.dependenciesDir>
        <!-- application dependencies that will be bundled into runtime image -->
        <build.platformModulesDir>${project.build.directory}${file.separator}platform-modules</build.platformModulesDir>
        <!-- jpackage generated application image root -->
        <build.package.appImageDir>${project.build.directory}${file.separator}app-image</build.package.appImageDir>
        <!-- AppDir spec compliant dir for creating AppImage -->
        <build.package.appDir>${project.build.directory}${file.separator}app-dir</build.package.appDir>
        <!-- jlink generated runtime image -->
        <build.package.runtimeImageDir>${project.build.directory}${file.separator}runtime-image
        </build.package.runtimeImageDir>
        <!-- contains package scripts after filtering and placeholder replacement -->
        <build.package.scriptsDir>${project.build.directory}${file.separator}package-scripts</build.package.scriptsDir>
        <!-- jpackage directory for temp artifacts -->
        <build.package.tempDir>${project.build.directory}${file.separator}package-temp</build.package.tempDir>
        <!-- final artifacts (zip, deb, rpm...) -->
        <build.releaseDir>${project.build.directory}${file.separator}release</build.releaseDir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${openfx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${openfx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${openfx.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${openfx.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/de.saxsys/mvvmfx -->
        <dependency>
            <groupId>de.saxsys</groupId>
            <artifactId>mvvmfx</artifactId>
            <version>${mvvmfx.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/de.saxsys/mvvmfx-cdi -->
<!--        <dependency>-->
<!--            <groupId>de.saxsys</groupId>-->
<!--            <artifactId>mvvmfx-cdi</artifactId>-->
<!--            <version>1.8.0</version>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>javax.enterprise</groupId>-->
<!--                    <artifactId>cdi-api</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->

        <dependency>
            <groupId>net.raumzeitfalle.fx</groupId>
            <artifactId>scenic-view</artifactId>
            <version>11.0.2</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>${ikonli.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.kordamp.ikonli/ikonli-material2-pack -->
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-material2-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.kordamp.ikonli/ikonli-fontawesome5-pack -->
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome5-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>24.0.1</version>
        </dependency>
        <dependency>
            <groupId>fr.brouillard.oss</groupId>
            <artifactId>cssfx</artifactId>
            <version>11.5.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.github.mkpaz/atlantafx-base -->
        <dependency>
            <groupId>io.github.mkpaz</groupId>
            <artifactId>atlantafx-base</artifactId>
            <version>${atlantafx.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.dlsc.gemsfx/gemsfx -->
        <dependency>
            <groupId>com.dlsc.gemsfx</groupId>
            <artifactId>gemsfx</artifactId>
            <version>2.32.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.kordamp.bootstrapfx/bootstrapfx-core -->
        <dependency>
            <groupId>org.kordamp.bootstrapfx</groupId>
            <artifactId>bootstrapfx-core</artifactId>
            <version>0.4.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/jakarta.enterprise/jakarta.enterprise.cdi-api -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.1.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jboss.weld.se/weld-se-core -->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>5.1.2.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>6.1.10</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>6.1.10</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>6.1.10</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>6.1.10</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>3.3.1</version>
        </dependency>


        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>22.0.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.224</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.5.2.Final</version>
        </dependency>


    </dependencies>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>22</source>
                    <target>22</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <configuration>
                    <executable>${java.home}/bin/java</executable>
                    <mainClass>${app.launcher}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>run</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- copy all dependencies that won't be included into runtime image -->
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <excludeGroupIds>org.openjfx</excludeGroupIds>
                        </configuration>
                    </execution>
                    <!-- copy platform dependencies that will be included into runtime image -->
                    <execution>
                        <id>copy-openjfx</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.platformModulesDir}</outputDirectory>
                            <includeGroupIds>org.openjfx</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <!-- skip installation to the local repository -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <!-- copy application JAR file to the dependencies -->
                <configuration>
                    <outputDirectory>${build.dependenciesDir}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.github.wiverson</groupId>
                <artifactId>jtoolprovider-plugin</artifactId>
                <executions>
                    <!-- create custom JRE image -->
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jlink</toolName>
                            <addModules>
                                java.base,java.logging,jdk.localedata,jdk.zipfs,java.desktop,java.prefs,javafx.controls,javafx.fxml,javafx.swing,javafx.web
                            </addModules>
                            <modulePath>${build.platformModulesDir}</modulePath>
                            <output>${build.package.runtimeImageDir}</output>
                            <args>
                                <!-- additional options to shrink resulting image even more -->
                                <arg>--include-locales=en</arg>
                                <arg>--no-header-files</arg>
                                <arg>--no-man-pages</arg>
                                <arg>--strip-debug</arg>
                                <arg>--verbose</arg>
                            </args>
                        </configuration>
                    </execution>
                    <!-- create application image (includes JRE plus application JARs and resources) -->
                    <execution>
                        <id>create-app-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jpackage</toolName>
                            <removeDirectories>${build.package.tempDir}</removeDirectories>
                            <args>
                                <arg>@${build.package.scriptsDir}${file.separator}args-base.txt</arg>
                                <arg>@${build.package.scriptsDir}${file.separator}args-app-image.txt</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- compress app image and place result to the release dir -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assembly</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.releaseDir}</outputDirectory>
                            <finalName>${build.artifactName}</finalName>
                            <attach>false</attach>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <descriptors>
                                <descriptor>src/package-scripts/app-image.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- skip module deployment -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.fxml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/package-scripts</directory>
                <filtering>true</filtering>
                <targetPath>${build.package.scriptsDir}</targetPath>
            </resource>
        </resources>
    </build>

</project>